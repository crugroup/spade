# Generated by Django 5.2.2 on 2025-06-09 14:20

import django.db.models.deletion
import rules.contrib.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("files", "0004_alter_fileformat_options_alter_fileprocessor_options"),
        ("processes", "0002_alter_executor_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="Variable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Variable name", max_length=100, unique=True
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Variable description", null=True
                    ),
                ),
                ("value", models.TextField(help_text="Variable value")),
                (
                    "is_secret",
                    models.BooleanField(
                        default=False, help_text="Whether this variable is secret"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ("name",),
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="VariableSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Variable set name", max_length=100, unique=True
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Variable set description", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "variables",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Variables in this set",
                        to="variables.variable",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ProcessVariableSets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "process",
                    models.ForeignKey(
                        help_text="Process that uses these variable sets",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="processes.process",
                    ),
                ),
                (
                    "variable_set",
                    models.ForeignKey(
                        help_text="Variable set to be used by the process",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="variables.variableset",
                    ),
                ),
            ],
            options={
                "verbose_name": "Process Variable Set",
                "verbose_name_plural": "Process Variable Sets",
                "ordering": ("process__code", "variable_set__name"),
                "unique_together": {("process", "variable_set")},
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FileVariableSets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now=True)),
                (
                    "file",
                    models.ForeignKey(
                        help_text="File that uses these variable sets",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="files.file",
                    ),
                ),
                (
                    "variable_set",
                    models.ForeignKey(
                        help_text="Variable set to be used by the file",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="variables.variableset",
                    ),
                ),
            ],
            options={
                "verbose_name": "File Variable Set",
                "verbose_name_plural": "File Variable Sets",
                "ordering": ("file__code", "variable_set__name"),
                "unique_together": {("file", "variable_set")},
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
    ]
